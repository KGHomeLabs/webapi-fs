trigger:
  branches:
    include:
      - prev
  paths:
    exclude:
      - azure-pipelines-prev.yml

pr: none

pool:
  vmImage: 'windows-latest'

variables:
  # Define Azure connection string as a pipeline variable (set in Azure DevOps UI or Library for security)
  azureConnectionString: $(AZURE_CONNECTION_STRING)

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
  displayName: 'Install .NET SDK'

- script: dotnet restore
  displayName: 'Dotnet Restore'

- script: dotnet build --no-restore --configuration Release
  displayName: 'Building Solution'

- script: |
    sqllocaldb create mssqllocaldb
    sqllocaldb start mssqllocaldb
    sqllocaldb info mssqllocaldb
  displayName: 'Create and Start LocalDB'

- script: dotnet run --project WebApi.Migrations.csproj
  displayName: 'Run Migrations (LocalDB)'
  workingDirectory: $(Build.SourcesDirectory)/WebApi.Migrations

- script: dotnet test --no-build --configuration Release --logger trx
  displayName: 'Run Tests against LocalDB'
  condition: succeeded()

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/TestResults/*.trx'
  condition: succeededOrFailed()

- task: AzureCLI@2
  displayName: 'Add Agent IP to SQL Firewall'
  inputs:
    azureSubscription: 'Connection2Azure'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      AGENT_IP=$(curl -s http://ipinfo.io/ip)
      echo "Agent IP: $AGENT_IP"
      az sql server firewall-rule create --resource-group Homelab2025 --server homelab42 --name PipelineAgent_$(date +%s) --start-ip-address $AGENT_IP --end-ip-address $AGENT_IP
  condition: succeeded()

- script: dotnet run --project WebApi.Migrations.csproj
  displayName: 'Run Migrations (Azure DB)'
  workingDirectory: $(Build.SourcesDirectory)/WebApi.Migrations
  env:
    AZURE_CONNECTION_STRING: $(azureConnectionString)
  condition: succeeded()

- script: dotnet publish --configuration Release --output $(Build.ArtifactStagingDirectory)
  displayName: 'Publish App to File Stage'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Connection2Azure'
    appType: 'webApp'
    appName: 'app-service-homelab'
    package: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Deploy Web App to Azure'
  condition: succeeded()